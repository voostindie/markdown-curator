package nl.ulso.markdown_curator.journal;

import com.google.inject.AbstractModule;
import com.google.inject.Provides;
import nl.ulso.markdown_curator.DataModel;
import nl.ulso.markdown_curator.query.Query;

import static com.google.inject.multibindings.Multibinder.newSetBinder;

/**
 * Extracts journal information from daily logs.
 * <p/>
 * The journal is extracted from a specific H2 section in the daily log pages, as configured in the
 * constructor. That section is expected to contain an outline: a nested list of items that describe
 * the things to log for that day.
 * <p/>
 * Once the log is built, it's possible to extract information for it, like a timeline for a
 * specific referenced document. That timeline contains, for each day the document is referenced
 * a subset of the outline.
 * <p/>
 * This journal is inspired heavily by Logseq, except of course that output generated by this tool
 * is statically included in Markdown files, instead of dynamic.
 * <p/>
 * To use this journal in your own curator, you have to do install it in your Guice module.
 */
public class JournalModule
        extends AbstractModule
{
    private final String journalFolder;
    private final String activitiesSection;

    public JournalModule(String journalFolder, String activitiesSection)
    {

        this.journalFolder = journalFolder;
        this.activitiesSection = activitiesSection;
    }

    @Provides
    JournalSettings journalSettings()
    {
        return new JournalSettings(journalFolder, activitiesSection);
    }

    @Override
    protected void configure()
    {
        newSetBinder(binder(), DataModel.class).addBinding().to(Journal.class);
        newSetBinder(binder(), Query.class).addBinding().to(TimelineQuery.class);
    }
}

