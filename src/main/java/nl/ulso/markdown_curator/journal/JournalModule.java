package nl.ulso.markdown_curator.journal;

import dagger.Binds;
import dagger.Module;
import dagger.multibindings.IntoSet;
import nl.ulso.markdown_curator.DataModel;
import nl.ulso.markdown_curator.query.Query;

/**
 * Extracts journal information from daily logs.
 * <p/>
 * The journal is extracted from a specific H2 section in the daily log pages, as configured in the
 * constructor. That section is expected to contain an outline: a nested list of items that describe
 * the things to log for that day.
 * <p/>
 * Once the log is built, it's possible to extract information for it, like a timeline for a
 * specific referenced document. That timeline contains, for each day the document is referenced
 * a subset of the outline.
 * <p/>
 * This journal is inspired heavily by Logseq, except of course that output generated by this tool
 * is statically included in Markdown files, instead of dynamic.
 * <p/>
 * To use this journal in your own curator, you have to do install it in your Guice module.
 */
@Module
public abstract class JournalModule
{
    @Binds
    @IntoSet
    abstract DataModel bindDataModel(Journal journal);

    @Binds
    @IntoSet
    abstract Query bindTimelineQuery(TimelineQuery timelineQuery);

    @Binds
    @IntoSet
    abstract Query bindPeriodQuery(PeriodQuery periodQuery);

    @Binds
    @IntoSet
    abstract Query bindWeeklyQuery(WeeklyQuery weeklyQuery);

    @Binds
    @IntoSet
    abstract Query bindDayNavigationQuery(DayNavigationQuery dayNavigationQuery);

    @Binds
    @IntoSet
    abstract Query bindWeekNavigationQuery(WeekNavigationQuery weekNavigationQuery);

    @Binds
    @IntoSet
    abstract Query bindLatestJournalNavigationQuery(LatestJournalNavigationQuery markedQuery);

    @Binds
    @IntoSet
    abstract Query bindMarkedQuery(MarkedQuery markedQuery);
}
